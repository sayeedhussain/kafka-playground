version: '3'
services:
  kafka-playground:
    container_name: kafka-playground
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8085:8080"
    volumes:
      - gradle_user_home:/gradle_user_home
      - ./.gradle:/app/.gradle
      - ./build:/app/build
      - ./.git:/app/.git
      - ./src:/app/src
      - ./build.gradle:/app/build.gradle
      - ./settings.gradle:/app/settings.gradle
    environment:
      - JDBC_DATABASE_URL=jdbc:postgresql://db:5432/appDb
      - GRADLE_USER_HOME=/gradle_user_home
      - SPRING_PROFILES_ACTIVE=local
      - BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - db

  db:
    image: postgres:14.5
    container_name: app-db
    restart: on-failure
    user: postgres
    volumes:
      - postgres_data:/var/lib/postgresql
      - ./sql:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=appDbUser
      - POSTGRES_PASSWORD=appDbPassword
      - POSTGRES_DB=appDb
    ports:
      - "5443:5432"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    ports:
      - "22181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true

  init-kafka:
    image: ${REGISTRY_URL}confluentinc/cp-kafka:7.3.0
    container_name: init_kafka
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic my-topic --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "

volumes:
  gradle_user_home:
  postgres_data:
